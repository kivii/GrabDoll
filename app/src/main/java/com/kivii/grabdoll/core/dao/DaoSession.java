package com.kivii.grabdoll.core.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.kivii.grabdoll.core.bean.DailyRecord;
import com.kivii.grabdoll.core.bean.Image;
import com.kivii.grabdoll.core.bean.MachineGroup;
import com.kivii.grabdoll.core.bean.Organization;
import com.kivii.grabdoll.core.bean.Toys;
import com.kivii.grabdoll.core.bean.User;
import com.kivii.grabdoll.core.bean.CustomerStorage;
import com.kivii.grabdoll.core.bean.CustomerStorageRecord;
import com.kivii.grabdoll.ui.entity.Contact;

import com.kivii.grabdoll.core.dao.DailyRecordDao;
import com.kivii.grabdoll.core.dao.ImageDao;
import com.kivii.grabdoll.core.dao.MachineGroupDao;
import com.kivii.grabdoll.core.dao.OrganizationDao;
import com.kivii.grabdoll.core.dao.ToysDao;
import com.kivii.grabdoll.core.dao.UserDao;
import com.kivii.grabdoll.core.dao.CustomerStorageDao;
import com.kivii.grabdoll.core.dao.CustomerStorageRecordDao;
import com.kivii.grabdoll.core.dao.ContactDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dailyRecordDaoConfig;
    private final DaoConfig imageDaoConfig;
    private final DaoConfig machineGroupDaoConfig;
    private final DaoConfig organizationDaoConfig;
    private final DaoConfig toysDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig customerStorageDaoConfig;
    private final DaoConfig customerStorageRecordDaoConfig;
    private final DaoConfig contactDaoConfig;

    private final DailyRecordDao dailyRecordDao;
    private final ImageDao imageDao;
    private final MachineGroupDao machineGroupDao;
    private final OrganizationDao organizationDao;
    private final ToysDao toysDao;
    private final UserDao userDao;
    private final CustomerStorageDao customerStorageDao;
    private final CustomerStorageRecordDao customerStorageRecordDao;
    private final ContactDao contactDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dailyRecordDaoConfig = daoConfigMap.get(DailyRecordDao.class).clone();
        dailyRecordDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        machineGroupDaoConfig = daoConfigMap.get(MachineGroupDao.class).clone();
        machineGroupDaoConfig.initIdentityScope(type);

        organizationDaoConfig = daoConfigMap.get(OrganizationDao.class).clone();
        organizationDaoConfig.initIdentityScope(type);

        toysDaoConfig = daoConfigMap.get(ToysDao.class).clone();
        toysDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        customerStorageDaoConfig = daoConfigMap.get(CustomerStorageDao.class).clone();
        customerStorageDaoConfig.initIdentityScope(type);

        customerStorageRecordDaoConfig = daoConfigMap.get(CustomerStorageRecordDao.class).clone();
        customerStorageRecordDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        dailyRecordDao = new DailyRecordDao(dailyRecordDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);
        machineGroupDao = new MachineGroupDao(machineGroupDaoConfig, this);
        organizationDao = new OrganizationDao(organizationDaoConfig, this);
        toysDao = new ToysDao(toysDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        customerStorageDao = new CustomerStorageDao(customerStorageDaoConfig, this);
        customerStorageRecordDao = new CustomerStorageRecordDao(customerStorageRecordDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);

        registerDao(DailyRecord.class, dailyRecordDao);
        registerDao(Image.class, imageDao);
        registerDao(MachineGroup.class, machineGroupDao);
        registerDao(Organization.class, organizationDao);
        registerDao(Toys.class, toysDao);
        registerDao(User.class, userDao);
        registerDao(CustomerStorage.class, customerStorageDao);
        registerDao(CustomerStorageRecord.class, customerStorageRecordDao);
        registerDao(Contact.class, contactDao);
    }
    
    public void clear() {
        dailyRecordDaoConfig.clearIdentityScope();
        imageDaoConfig.clearIdentityScope();
        machineGroupDaoConfig.clearIdentityScope();
        organizationDaoConfig.clearIdentityScope();
        toysDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        customerStorageDaoConfig.clearIdentityScope();
        customerStorageRecordDaoConfig.clearIdentityScope();
        contactDaoConfig.clearIdentityScope();
    }

    public DailyRecordDao getDailyRecordDao() {
        return dailyRecordDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

    public MachineGroupDao getMachineGroupDao() {
        return machineGroupDao;
    }

    public OrganizationDao getOrganizationDao() {
        return organizationDao;
    }

    public ToysDao getToysDao() {
        return toysDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public CustomerStorageDao getCustomerStorageDao() {
        return customerStorageDao;
    }

    public CustomerStorageRecordDao getCustomerStorageRecordDao() {
        return customerStorageRecordDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

}
